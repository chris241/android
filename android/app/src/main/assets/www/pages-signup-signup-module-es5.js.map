{"version":3,"sources":["src/app/pages/signup/signup.page.html","src/app/pages/signup/signup.module.ts","src/app/pages/signup/signup.page.scss","src/app/pages/signup/signup.page.ts","src/app/services/user/user.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ 'SIGNUP_TITLE' | translate }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form (submit)=\\\"doSignup()\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">{{ 'FIRST_NAME' | translate }}</ion-label>\\n        <ion-input type=\\\"string\\\" [(ngModel)]=\\\"account.firstName\\\" name=\\\"firstName\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">{{ 'LAST_NAME' | translate }}</ion-label>\\n        <ion-input type=\\\"string\\\" [(ngModel)]=\\\"account.lastName\\\" name=\\\"lastName\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">{{ 'EMAIL' | translate }}</ion-label>\\n        <ion-input type=\\\"email\\\" [(ngModel)]=\\\"account.email\\\" name=\\\"email\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">{{ 'PASSWORD' | translate }}</ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"account.password\\\" name=\\\"password\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-row class=\\\"ion-padding\\\">\\n        <ion-col>\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" color=\\\"primary\\\">{{ 'SIGNUP_BUTTON' | translate }}</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\"","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, RouterModule.forChild(routes), TranslateModule],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss']\n})\nexport class SignupPage implements OnInit {\n  // The account fields for the signup form\n  account: {\n    login: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    password: string;\n    langKey: string;\n  } = {\n    login: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    password: '',\n    langKey: 'en'\n  };\n\n  // Our translated text strings\n  private signupErrorString: string;\n  private signupSuccessString: string;\n  private existingUserError: string;\n  private invalidPasswordError: string;\n\n  constructor(\n    public navController: NavController,\n    public userService: UserService,\n    public toastController: ToastController,\n    public translateService: TranslateService\n  ) {\n    this.translateService.get(['SIGNUP_ERROR', 'SIGNUP_SUCCESS', 'EXISTING_USER_ERROR', 'INVALID_PASSWORD_ERROR']).subscribe(values => {\n      this.signupErrorString = values.SIGNUP_ERROR;\n      this.signupSuccessString = values.SIGNUP_SUCCESS;\n      this.existingUserError = values.EXISTING_USER_ERROR;\n      this.invalidPasswordError = values.INVALID_PASSWORD_ERROR;\n    });\n  }\n\n  ngOnInit() {}\n\n  doSignup() {\n    // set login to same as email\n    this.account.login = this.account.email;\n    // Attempt to login in through our User service\n    this.userService.signup(this.account).subscribe(\n      async () => {\n        const toast = await this.toastController.create({\n          message: this.signupSuccessString,\n          duration: 3000,\n          position: 'top'\n        });\n        toast.present();\n      },\n      async response => {\n        // Unable to sign up\n        const error = JSON.parse(response.error);\n        let displayError = this.signupErrorString;\n        if (response.status === 400 && error.type.includes('already-used')) {\n          displayError = this.existingUserError;\n        } else if (\n          response.status === 400 &&\n          error.message === 'error.validation' &&\n          error.fieldErrors[0].field === 'password' &&\n          error.fieldErrors[0].message === 'Size'\n        ) {\n          displayError = this.invalidPasswordError;\n        }\n        const toast = await this.toastController.create({\n          message: displayError,\n          duration: 3000,\n          position: 'middle'\n        });\n        toast.present();\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { AuthApiService } from '../auth/api/auth-api.service';\nimport { LoginService } from '../login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private user: any;\n\n  constructor(public apiService: AuthApiService, public loginService: LoginService) {}\n\n  /**\n   * Send a POST request to our login endpoint with the data\n   * the user entered on the form.\n   */\n  login(accountInfo: any) {\n    this.loginService\n      .login(accountInfo)\n      .then(res => {\n        this.loggedIn(res);\n        return of(res);\n      })\n      .catch(err => {\n        console.error('ERROR', err);\n        return throwError(err);\n      });\n  }\n\n  findAll(): Observable<any> {\n    return this.apiService.get('users');\n  }\n\n  /**\n   * Send a POST request to our signup endpoint with the data\n   * the user entered on the form.\n   */\n  signup(accountInfo: any) {\n    return this.apiService.post('register', accountInfo, { responseType: 'text' as 'text' }).pipe(share());\n  }\n\n  /**\n   * Log the user out, which forgets the session\n   */\n  logout() {\n    this.loginService.logout();\n    this.user = null;\n  }\n\n  /**\n   * Process a login/signup response to store user data\n   */\n  private loggedIn(resp) {\n    this.user = resp.user;\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-signup-signup-module-es5.js"}