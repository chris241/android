{"version":3,"sources":["./src/app/pages/login/login.page.html","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iNAAkJ,6BAA6B,oMAAoM,0BAA0B,kMAAkM,0BAA0B,mnBAAmnB,6BAA6B,6QAA6Q,8BAA8B,kG;;;;;;;;;;;;;;;;;;;;;;;ACApgD;AACN;AACI;AACU;AACV;AACS;AACb;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAMF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAJ3B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,0DAAW,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,mEAAe,CAAC;QACjG,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;ACnB5B;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACc;AACT;AACa;AACb;AACX;AAGkB;AAO9D,IAAa,SAAS,GAAtB,MAAa,SAAS;IAmBpB,YACS,gBAAkC,EAClC,YAA0B,EAC1B,eAAgC,EAChC,aAA4B;QAH5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAtBrC,yCAAyC;QACzC,YAAO,GAAgE;YACrE,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,KAAK;SAClB,CAAC;QAQF,oBAAe,GAAG,qEAAW,CAAC,UAAU,CAAC;IAUtC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACzD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACxC,GAAG,EAAE;YACH,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC,EACD,CAAM,GAAG,EAAC,EAAE,CAAC;YACX,mBAAmB;YACnB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO,EAAE,IAAI,CAAC,gBAAgB;gBAC9B,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,EACF,CAAC;IACJ,CAAC;CACF;;YA9B4B,oEAAgB;YACpB,iFAAY;YACT,8DAAe;YACjB,4DAAa;;AAdrC;IADC,mEAAY,CAAC,8DAAI,CAAC,UAAU,CAAC;;6CACX;AAGnB;IADC,mEAAY,CAAC,8DAAI,CAAC,cAAc,CAAC;;iDACX;AAZZ,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,+MAAgC;;KAEjC,CAAC;2EAqB2B,oEAAgB;QACpB,iFAAY;QACT,8DAAe;QACjB,4DAAa;GAvB1B,SAAS,CAkDrB;AAlDqB","file":"pages-login-login-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ 'LOGIN_TITLE' | translate }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form (submit)=\\\"doLogin()\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">{{ 'USERNAME' | translate }}</ion-label>\\n        <ion-input type=\\\"string\\\" [(ngModel)]=\\\"account.username\\\" name=\\\"username\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">{{ 'PASSWORD' | translate }}</ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"account.password\\\" name=\\\"password\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item *ngIf=\\\"!environmentMode\\\">\\n        <ion-label position=\\\"floating\\\">Auth URL</ion-label>\\n        <ion-input type=\\\"string\\\" [(ngModel)]=\\\"apiAuthUrl\\\" name=\\\"authUrl\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item *ngIf=\\\"!environmentMode\\\">\\n        <ion-label position=\\\"floating\\\">Service URL</ion-label>\\n        <ion-input type=\\\"string\\\" [(ngModel)]=\\\"apiServicesUrl\\\" name=\\\"baseUrl\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>{{ 'REMEMBER_ME' | translate }}</ion-label>\\n        <ion-toggle [(ngModel)]=\\\"account.rememberMe\\\" name=\\\"rememberMe\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-row class=\\\"ion-padding\\\">\\n        <ion-col>\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" color=\\\"primary\\\" id=\\\"login\\\">{{ 'LOGIN_BUTTON' | translate }}</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\"","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, RouterModule.forChild(routes), TranslateModule],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoginService } from 'src/app/services/login/login.service';\nimport {keys} from \"../../../assets/appPreferenceKeys\";\nimport {LocalStorage} from \"ngx-webstorage\";\nimport {AlertClientService} from \"@trixprod/api-verse-real-estate/api/alertClient.service\";\nimport {AlertListOutputDto} from \"@trixprod/api-verse-real-estate/model/alertListOutputDto\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss']\n})\nexport class LoginPage implements OnInit {\n  // The account fields for the login form.\n  account: { username: string; password: string; rememberMe: boolean } = {\n    username: '',\n    password: '',\n    rememberMe: false\n  };\n\n  @LocalStorage(keys.apiAuthUrl)\n  apiAuthUrl: string;\n\n  @LocalStorage(keys.apiServicesUrl)\n  apiServicesUrl: string;\n\n  environmentMode = environment.production;\n\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(\n    public translateService: TranslateService,\n    public loginService: LoginService,\n    public toastController: ToastController,\n    public navController: NavController\n  ) {}\n\n  ngOnInit() {\n    this.translateService.get('LOGIN_ERROR').subscribe(value => {\n      this.loginErrorString = value;\n    });\n  }\n\n  doLogin() {\n    this.loginService.login(this.account).then(\n      () => {\n        this.navController.navigateRoot('/tabs');\n      },\n      async err => {\n        // Unable to log in\n        console.log(err);\n        this.account.password = '';\n        const toast = await this.toastController.create({\n          message: this.loginErrorString,\n          duration: 3000,\n          position: 'top'\n        });\n        toast.present();\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}